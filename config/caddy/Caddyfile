# =============================================================================
# PROSORA GHOST BLOG - CADDY CONFIGURATION
# =============================================================================
# Modern web server with automatic HTTPS, HTTP/3, and performance optimization

# Global options
{
    # Enable automatic HTTPS
    auto_https on
    
    # Enable HTTP/3 (QUIC)
    servers {
        protocol {
            experimental_http3
        }
    }
    
    # Email for Let's Encrypt
    email {$EMAIL}
    
    # Enable admin API (optional, for monitoring)
    admin localhost:2019
    
    # Log configuration
    log {
        output file /var/log/caddy/access.log {
            roll_size 100mb
            roll_keep 5
            roll_keep_for 720h
        }
        format json
        level INFO
    }
}

# Main site configuration
{$DOMAIN} {
    # Enable compression
    encode {
        gzip 6
        zstd
        minimum_length 1024
    }
    
    # Security headers
    header {
        # HSTS (HTTP Strict Transport Security)
        Strict-Transport-Security "max-age=31536000; includeSubDomains; preload"
        
        # Content Security Policy
        Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval' *.stripe.com *.tinybird.co *.cloudinary.com; style-src 'self' 'unsafe-inline' fonts.googleapis.com; font-src 'self' fonts.gstatic.com; img-src 'self' data: *.cloudinary.com *.gravatar.com; connect-src 'self' *.stripe.com *.tinybird.co; frame-src 'self' *.stripe.com; object-src 'none'; base-uri 'self'; form-action 'self'"
        
        # Other security headers
        X-Content-Type-Options "nosniff"
        X-Frame-Options "SAMEORIGIN"
        X-XSS-Protection "1; mode=block"
        Referrer-Policy "strict-origin-when-cross-origin"
        Permissions-Policy "geolocation=(), microphone=(), camera=()"
        
        # Remove server information
        -Server
        -X-Powered-By
        
        # Cache control for static assets
        @static {
            path *.css *.js *.png *.jpg *.jpeg *.gif *.ico *.svg *.woff *.woff2 *.ttf *.eot
        }
        @static Cache-Control "public, max-age=31536000, immutable"
    }
    
    # Rate limiting
    rate_limit {
        zone dynamic {
            key {remote_host}
            events 100
            window 1m
        }
        zone api {
            key {remote_host}
            events 30
            window 1m
        }
    }
    
    # Handle API routes with stricter rate limiting
    @api {
        path /ghost/api/*
    }
    rate_limit @api api
    
    # Handle admin routes
    @admin {
        path /ghost/*
    }
    
    # Static file caching
    @static {
        path *.css *.js *.png *.jpg *.jpeg *.gif *.ico *.svg *.woff *.woff2 *.ttf *.eot *.webp *.avif
    }
    
    # Cache static files
    handle @static {
        header Cache-Control "public, max-age=31536000, immutable"
        reverse_proxy ghost:2368
    }
    
    # Handle Stripe webhooks (no rate limiting)
    @stripe_webhook {
        path /stripe/webhook
    }
    handle @stripe_webhook {
        reverse_proxy ghost:2368
    }
    
    # Handle sitemap and feeds
    @feeds {
        path /sitemap*.xml /rss/ /feed/
    }
    handle @feeds {
        header Cache-Control "public, max-age=3600"
        reverse_proxy ghost:2368
    }
    
    # Main reverse proxy to Ghost
    reverse_proxy ghost:2368 {
        # Health check
        health_uri /ghost/api/v4/admin/site/
        health_interval 30s
        health_timeout 10s
        
        # Load balancing (for future scaling)
        lb_policy round_robin
        
        # Headers for Ghost
        header_up Host {host}
        header_up X-Real-IP {remote_host}
        header_up X-Forwarded-For {remote_host}
        header_up X-Forwarded-Proto {scheme}
        header_up X-Forwarded-Port {server_port}
        
        # Timeouts
        transport http {
            dial_timeout 10s
            response_header_timeout 30s
            read_timeout 60s
            write_timeout 60s
        }
    }
    
    # Custom error pages
    handle_errors {
        @5xx expression `{http.error.status_code} >= 500`
        handle @5xx {
            respond "Service temporarily unavailable. Please try again later." 503 {
                header Content-Type "text/plain; charset=utf-8"
            }
        }
        
        @4xx expression `{http.error.status_code} >= 400 && {http.error.status_code} < 500`
        handle @4xx {
            respond "Page not found." 404 {
                header Content-Type "text/plain; charset=utf-8"
            }
        }
    }
    
    # Logging for this site
    log {
        output file /var/log/caddy/{$DOMAIN}.log {
            roll_size 50mb
            roll_keep 10
            roll_keep_for 168h
        }
        format json {
            time_format "2006-01-02T15:04:05.000Z07:00"
        }
        level INFO
    }
}

# Redirect www to non-www (optional)
www.{$DOMAIN} {
    redir https://{$DOMAIN}{uri} permanent
}

# Health check endpoint for monitoring
:8080 {
    respond /health "OK" 200
    respond /metrics "# Caddy metrics endpoint" 200
}

# =============================================================================
# PERFORMANCE OPTIMIZATIONS
# =============================================================================
# - Automatic HTTP/2 and HTTP/3 support
# - Gzip and Zstandard compression
# - Static file caching with long expiry
# - Connection pooling and keep-alive
# - Efficient reverse proxy with health checks

# =============================================================================
# SECURITY FEATURES
# =============================================================================
# - Automatic HTTPS with Let's Encrypt
# - Security headers (HSTS, CSP, etc.)
# - Rate limiting for API endpoints
# - XSS and clickjacking protection
# - Server information hiding

# =============================================================================
# MONITORING & LOGGING
# =============================================================================
# - Structured JSON logging
# - Log rotation and retention
# - Health check endpoints
# - Admin API for monitoring